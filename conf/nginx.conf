
###you can uncomment next two lines for easy debug
###Warning: if master_process is off, there will be only one nginx worker running. Only use it for debug propose.

daemon  off;

#master_process  off;
user root;
#user  www-data;
worker_processes  auto;

error_log  logs/error.log;
#error_log  logs/error.log debug;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;
error_log  logs/error.log  error;
error_log /dev/stdout info;
#error_log  /dev/stdout  notice;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log ;
	access_log /dev/stdout;
   ignore_invalid_headers off;
    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
   # keepalive_timeout  65;
	send_timeout 30000;

    #gzip  on;
    

    jvm_path "/usr/java/jdk1.7.0_79/jre/lib/amd64/server/libjvm.so";
    
    ### Set my app jars and resources, it must include nginx-clojure runtime jar,e.g. nginx-clojure-0.4.4.jar and 
    ### for clojure user clojure runtime jar is also needed.
    ### See http://nginx-clojure.github.io/directives.html#jvm_classpath
    jvm_classpath "/root/newlb/loadbalancer/jars/*";
    
    ###jvm heap memory
    #jvm_options "-Xms1024m";
    #jvm_options "-Xmx1024m";
    
    #for enable java remote debug uncomment next two lines
    #jvm_options "-Xdebug";
    #jvm_options "-Xrunjdwp:server=y,transport=dt_socket,address=840#{pno},suspend=n";

    ###threads number for request handler thread pool on jvm, default is 0. 
    ###check more details from 
    #jvm_workers 8;

    server {
	#listen 80;
        listen       443 ssl;
	# server_name  efdirector.invent.symphoni.io;
	ssl_certificate      /root/certs/development/development.crt;
        ssl_certificate_key /root/certs/development/development.key;
	 add_header Strict-Transport-Security "max-age=0";
	ssl_protocols TLSv1.2;
	   #charset koi8-r;

        #access_log  logs/host.access.log  main;

      #  location / {
      #      root   html;
      #      index  index.html index.htm;
      #  }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
	   set $customhost '';
	   set $backend '';
	   location / {
		 proxy_connect_timeout 30000;
		 proxy_read_timeout 30000;
		 proxy_send_timeout 30000;	
		 proxy_ssl_session_reuse off;
		 #proxy_ssl_trusted_certificate /root/certs/bosuiteCA.pem;
		 #proxy_ssl_server_name on;
		proxy_ssl_verify off;		
		proxy_ssl_protocols TLSv1.2;
		#proxy_ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
		  resolver 192.168.6.2;
		   always_read_body on;			
		  rewrite_handler_type 'java'; 
		  rewrite_handler_name 'org.syn.routetohost.RoutingHandler';
		  proxy_set_header Host $customhost;
		   proxy_ssl_name $customhost;		
		proxy_pass_request_headers on;
		  proxy_pass $backend;

			
		}
#          location /update {
#          content_handler_type 'groovy';
#          content_handler_code ' 
#               import nginx.clojure.java.NginxJavaRingHandler;
#               import java.util.Map;
#               public class HelloGroovy implements NginxJavaRingHandler {
#                  public Object[] invoke(Map<String, Object> request){
#                     return [201, //http status 
#                             ["Content-Type":"text/plain"], //headers map
#                             "Server details updated"]; //response body can be string, File or Array/Collection of them
#                  }
#               }
#          ';
#       }
#
       
       
    }

}
